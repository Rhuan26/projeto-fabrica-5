import streamlit as st
import pandas as pd
import altair as alt

# ---------------------------------------------------------
# CONFIGURA√á√ÉO B√ÅSICA
# ---------------------------------------------------------
st.set_page_config(page_title="Evolu√ß√£o Populacional e Mortalidade", layout="wide")

st.title("üìä Crescimento e Mortalidade Populacional ao Longo da Hist√≥ria")
st.write("""
Esta aplica√ß√£o mostra como a popula√ß√£o mundial evoluiu ao longo dos s√©culos, 
com base em dados hist√≥ricos e estimativas globais. 
Tamb√©m analisa a taxa de mortalidade e os eventos que mais impactaram o crescimento humano.
""")

# ---------------------------------------------------------
# CARREGAR DADOS
# ---------------------------------------------------------
url = "https://raw.githubusercontent.com/datasets/population/master/data/population.csv"
dados = pd.read_csv(url)

# ---------------------------------------------------------
# CRIAR ABAS
# ---------------------------------------------------------
aba1, aba2 = st.tabs(["üåç Vis√£o Global", "üá®üá≥ Comparar Pa√≠ses"])

# ---------------------------------------------------------
# üåç ABA 1 ‚Äì VIS√ÉO GLOBAL
# ---------------------------------------------------------
with aba1:
    dados_mundo = dados[dados['Country Name'] == 'World']

    st.subheader("üåç Dados Hist√≥ricos de Popula√ß√£o Mundial")
    st.dataframe(dados_mundo.tail(10))

    st.subheader("üìà Crescimento da Popula√ß√£o Mundial (1960 - Atual)")

    grafico_pop = alt.Chart(dados_mundo).mark_area(color='lightblue').encode(
        x=alt.X('Year:O', title='Ano'),
        y=alt.Y('Value:Q', title='Popula√ß√£o Mundial'),
        tooltip=['Year', alt.Tooltip('Value', format=',.0f')]
    ).properties(width=800, height=400)

    st.altair_chart(grafico_pop, use_container_width=True)

    st.subheader("‚ö∞Ô∏è Taxa Global de Mortalidade (estimativa hist√≥rica)")

    mortality = pd.DataFrame({
        'Ano': list(range(1800, 2021, 10)),
        'Taxa de Mortalidade (%)': [25, 22, 20, 18, 15, 13, 12, 11, 10, 9, 8, 7, 6, 5, 5, 4, 3, 3, 2.5, 2.3, 2.1, 1.9, 1.8]
    })

    grafico_morte = alt.Chart(mortality).mark_line(point=True, color='crimson').encode(
        x='Ano:O',
        y='Taxa de Mortalidade (%):Q',
        tooltip=['Ano', 'Taxa de Mortalidade (%)']
    ).properties(width=800, height=400)

    st.altair_chart(grafico_morte, use_container_width=True)

    st.subheader("üï∞Ô∏è Contexto Hist√≥rico")
    st.markdown("""
    - **Antes de 1800:** Alta mortalidade infantil e doen√ßas infecciosas limitavam o crescimento.  
    - **1850‚Äì1950:** Revolu√ß√£o Industrial e avan√ßos m√©dicos aumentaram a expectativa de vida.  
    - **Ap√≥s 1950:** Medicina moderna e globaliza√ß√£o impulsionaram o crescimento.  
    - **Hoje:** Desafios com sustentabilidade e envelhecimento populacional.
    """)

    st.info("""
    O crescimento populacional humano reflete nossa capacidade de adapta√ß√£o, 
    mas traz desafios de sustentabilidade e recursos limitados.
    """)

# ---------------------------------------------------------
# üá®üá≥ ABA 2 ‚Äì COMPARAR PA√çSES
# ---------------------------------------------------------
with aba2:
    st.subheader("üá∫üá≥ Compara√ß√£o de Crescimento Populacional entre Pa√≠ses")

    # Lista de pa√≠ses dispon√≠veis
    paises = sorted(dados['Country Name'].unique())

    col1, col2 = st.columns(2)
    with col1:
        pais1 = st.selectbox("Selecione o primeiro pa√≠s:", paises, index=paises.index("Brazil") if "Brazil" in paises else 0)
    with col2:
        pais2 = st.selectbox("Selecione o segundo pa√≠s:", paises, index=paises.index("China") if "China" in paises else 1)

    # Filtrando dados
    dados_pais1 = dados[dados['Country Name'] == pais1]
    dados_pais2 = dados[dados['Country Name'] == pais2]

    # Mesclando para tabela comparativa
    comparacao = pd.merge(
        dados_pais1[['Year', 'Value']].rename(columns={'Value': f'Popula√ß√£o - {pais1}'}),
        dados_pais2[['Year', 'Value']].rename(columns={'Value': f'Popula√ß√£o - {pais2}'}),
        on='Year'
    )

    st.dataframe(comparacao.tail(10))

    # Gr√°fico comparativo
    st.subheader("üìä Compara√ß√£o Gr√°fica")

    grafico_comp = alt.Chart(
        pd.concat([
            dados_pais1.assign(Pa√≠s=pais1),
            dados_pais2.assign(Pa√≠s=pais2)
        ])
    ).mark_line(point=True).encode(
        x=alt.X('Year:O', title='Ano'),
        y=alt.Y('Value:Q', title='Popula√ß√£o'),
        color='Pa√≠s:N',
        tooltip=['Pa√≠s', 'Year', alt.Tooltip('Value', format=',.0f')]
    ).properties(width=800, height=400)

    st.altair_chart(grafico_comp, use_container_width=True)

    st.subheader("üìò An√°lise e Contexto")
    st.markdown(f"""
    - **{pais1}** e **{pais2}** apresentam trajet√≥rias populacionais distintas, influenciadas por fatores hist√≥ricos, econ√¥micos e sociais.  
    - Em pa√≠ses como **{pais2}**, pol√≠ticas de natalidade e industrializa√ß√£o aceleraram o crescimento no s√©culo XX.  
    - J√° em **{pais1}**, o crescimento foi mais est√°vel, ligado a melhorias graduais em sa√∫de e economia.  
    - O gr√°fico permite observar **picos, quedas ou estagna√ß√µes** associadas a eventos hist√≥ricos.
    """)

